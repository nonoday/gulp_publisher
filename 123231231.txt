모바일 HTML 접근성 마크업 가이드
모바일 환경에서의 접근성은 다양한 사용자가 기기를 편리하게 사용할 수 있도록 하는 데 필수적입니다. 다음 가이드를 통해 더 나은 접근성을 구현할 수 있어요.

1. <table> 태그 (데이터 테이블)
<table> 태그는 단순히 레이아웃을 잡기 위해서가 아니라, 표 형태의 데이터를 시각적으로 구조화할 때 사용해야 합니다. 특히 스크린 리더 사용자를 위해 명확한 구조를 제공하는 것이 중요해요.

<caption> 요소: 테이블의 전체적인 내용을 요약하거나 설명하는 캡션을 반드시 제공해야 합니다. <table> 태그 바로 아래에 넣어서 사용하면 돼요. 
<table>
    <caption>2024년 1분기 지역별 매출 현황</caption>
    <thead>
        <tr>
            <th>지역</th>
            <th>매출액</th>
            <th>성장률</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>서울</td>
            <td>100억</td>
            <td>+10%</td>
        </tr>
        <!-- ... -->
    </tbody>
</table>
<th> (테이블 헤더): 행 또는 열의 헤더를 명확히 구분해야 합니다.
scope 속성: <th> 태그에는 scope="col" (열 헤더) 또는 scope="row" (행 헤더) 속성을 사용하여 해당 헤더가 어떤 셀들의 머리글인지 명시해야 합니다. 이는 스크린 리더가 테이블 내용을 올바르게 읽어주는 데 도움을 줍니다. 
<table>
    <caption>월별 제품 판매량</caption>
    <thead>
        <tr>
            <th scope="col">제품명</th>
            <th scope="col">1월</th>
            <th scope="col">2월</th>
            <th scope="col">3월</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <th scope="row">A 제품</th>
            <td>100개</td>
            <td>120개</td>
            <td>110개</td>
        </tr>
        <tr>
            <th scope="row">B 제품</th>
            <td>80개</td>
            <td>90개</td>
            <td>95개</td>
        </tr>
    </tbody>
</table>
summary 속성: HTML5부터는 <table> 태그의 summary 속성을 사용하지 않으니, 대신 <caption>을 활용해 주세요. 
2. Heading Tags (<h1> ~ <h6>)
헤딩 태그는 문서의 구조와 계층을 나타내는 중요한 요소입니다. 콘텐츠의 논리적인 흐름을 반영하고, 스크린 리더 사용자가 문서의 개요를 빠르게 파악할 수 있도록 돕습니다.

순차적 사용: <h1>부터 <h6>까지 순차적으로 사용해야 합니다. 예를 들어, <h1> 다음에 <h3>이 바로 오거나 하는 등의 비순차적인 사용은 피해야 합니다. 시각적으로 작은 글씨체를 위해 헤딩 레벨을 건너뛰지 마세요.
<h1>페이지의 가장 중요한 제목</h1>
<h2>첫 번째 섹션 제목</h2>
    <h3>첫 번째 섹션의 서브 제목</h3>
    <h3>두 번째 섹션의 서브 제목</h3>
<h2>두 번째 섹션 제목</h2>
    <h3>세 번째 섹션의 서브 제목</h3>
하나의 <h1>: 일반적으로 페이지당 하나의 <h1> 태그만 사용하는 것이 좋습니다. 이는 페이지의 주요 주제를 명확히 합니다.
3. <img> 태그 (이미지)
이미지는 시각적 정보를 제공하지만, 시각 장애 사용자에게는 정보가 전달되지 않습니다. alt 속성을 통해 이미지의 대체 텍스트를 제공해야 합니다.

alt 속성: 이미지가 전달하는 정보를 간결하고 명확하게 설명하는 대체 텍스트를 제공합니다.
정보성 이미지: alt="새싹 모양 로고"
장식성 이미지 (스크린 리더가 읽을 필요 없는): alt="" (빈 값으로 처리하여 스크린 리더가 건너뛰도록 합니다.)
<img src="logo.png" alt="립힙 로고">
<img src="decorative-line.png" alt="">
4. <a> 태그 (링크)
링크는 사용자가 다른 페이지나 콘텐츠로 이동할 수 있도록 합니다. 링크의 목적을 명확히 설명해야 합니다.

명확한 링크 텍스트: "자세히 보기"나 "여기 클릭" 같은 모호한 텍스트보다는 링크의 목적을 알 수 있는 텍스트를 사용합니다.
<!-- 나쁜 예 -->
<a href="/products">더 보려면 여기를 클릭하세요.</a>

<!-- 좋은 예 -->
<a href="/products">전체 제품 보기</a>
aria-label: 링크 텍스트만으로 부족할 경우, aria-label을 사용하여 링크의 목적을 더 자세히 설명할 수 있습니다.
<a href="/delete" aria-label="게시물 삭제">X</a>
5. form 요소 (폼 컨트롤)
사용자 입력 필드는 레이블과 올바르게 연결되어야 합니다.

<label> 요소: 모든 <input>, <textarea>, <select> 태그에는 반드시 id와 for 속성을 사용하여 레이블을 명시적으로 연결해야 합니다.
<label for="username">사용자 이름</label>
<input type="text" id="username">

<label for="newsletter">뉴스레터 구독</label>
<input type="checkbox" id="newsletter">
오류 메시지: 유효성 검사 오류 발생 시, 스크린 리더 사용자가 오류 내용을 명확히 인지할 수 있도록 시각적인 표시와 더불어 aria-live 속성 등을 활용하여 알림을 제공하는 것이 좋습니다.
모바일 입력 유형: type="tel", type="email", type="url", type="number" 등 HTML5에서 제공하는 다양한 input type을 활용하여 모바일 키보드를 최적화하고 사용자 입력 편의성을 높일 수 있습니다.
6. <ul>, <ol>, <li> 태그 (목록)
목록 태그는 여러 항목을 구조화하여 보여줄 때 사용합니다.

의미에 맞게 사용: 순서가 없는 목록은 <ul>, 순서가 있는 목록은 <ol>을 사용하고 각 항목은 <li>로 감쌉니다. 단순히 들여쓰기나 점 표시를 위해 사용하지 않습니다.
<ul>
    <li>메뉴 항목 1</li>
    <li>메뉴 항목 2</li>
</ul>

<ol>
    <li>첫 번째 단계</li>
    <li>두 번째 단계</li>
</ol>
7. dl, dt, dd 태그 (정의형 목록)
dl (Description List)은 용어와 그 정의를 나타내는 목록에 사용합니다.

정의형 목록에만 사용: dl은 "용어(Term) - 정의(Description)" 쌍을 나타내는 데 사용해야 합니다. 흔히 볼 수 있는 Key-Value 쌍이나 단순 속성 목록에 자주 오용되지만, 이는 권장되지 않습니다. 예를 들어, 웹사이트에서 용어사전, FAQ, 또는 메타데이터(예: 저자: 김립힙, 발행일: 2025.10.23.)를 표시할 때 유용해요. 
<dl>
    <dt>HTML</dt>
    <dd>웹 페이지의 구조를 만드는 마크업 언어입니다.</dd>

    <dt>CSS</dt>
    <dd>HTML 문서의 스타일을 꾸며주는 스타일 시트 언어입니다.</dd>
</dl>
dt (정의 용어), dd (정의 설명): dl 내부에 dt는 용어를, dd는 용어에 대한 설명을 포함합니다. 하나의 dt에 여러 dd가 올 수도 있고, 반대로 하나의 dd에 여러 dt가 올 수도 있습니다.
8. Landmark Roles 및 ARIA 속성
콘텐츠 영역을 구분하고, 스크린 리더 사용자가 주요 영역으로 쉽게 이동할 수 있도록 돕습니다.

시맨틱 HTML5 태그 활용: header, nav, main, footer, aside, article, section 등의 HTML5 시맨틱 태그는 암시적으로 ARIA 랜드마크 역할을 가지므로 최대한 활용합니다.
role 속성: 시맨틱 태그만으로 부족할 때, role="navigation", role="search", role="complementary" 등 ARIA role 속성을 명시적으로 추가하여 콘텐츠의 역할을 더 명확히 할 수 있습니다.
aria-label, aria-labelledby: 여러 개의 동일한 랜드마크(예: 여러 nav 영역)가 있을 때 각 영역을 구분하기 위해 aria-label이나 aria-labelledby를 사용하여 레이블을 부여합니다.
<nav aria-label="메인 메뉴">...</nav>
<nav aria-label="관련 링크">...</nav>
aria-hidden: 시각적으로는 보이지만 스크린 리더에는 불필요하거나 중복되는 요소가 있을 때 aria-hidden="true"를 사용하여 스크린 리더가 해당 요소를 건너뛰도록 할 수 있습니다. 신중하게 사용해야 합니다.
9. 모바일 환경 추가 고려사항
Viewport 설정: 반응형 웹을 위해 <meta name="viewport" content="width=device-width, initial-scale=1.0">를 <head> 태그 안에 반드시 포함합니다.
터치 대상 크기: 버튼, 링크 등 상호작용 가능한 요소의 최소 터치 대상 크기는 44x44px 이상으로 권장됩니다.
확대/축소 허용: 사용자가 화면을 확대/축소할 수 있도록 user-scalable=no나 maximum-scale 제한을 두지 않는 것이 좋습니다.
텍스트 크기: 최소 16px 이상을 기준으로 충분히 읽을 수 있는 크기의 폰트를 사용하고, 사용자가 텍스트 크기를 조절할 수 있도록 em, rem 같은 상대 단위를 활용하는 것이 좋습니다.